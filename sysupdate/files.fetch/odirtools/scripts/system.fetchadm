#!/bin/bash

. /etc/default/SYSconstants
##set -x




main()
{
ARGS="${*}"
CLEANARGS=`echo "${ARGS}"|perl -p -e "s/\ \-\-/\n/g"|perl -p -e 's/^--//g'`
ACTION=`echo "${CLEANARGS}"|grep '^action '|awk {'print $2" "$3'}`
HOST=`echo "${CLEANARGS}"|grep '^host '|awk {'print $2'}`
FETCHADMIN=`basename $0`
SUBACTION="`echo "${ACTION}"|awk {'print $2'}`"

if [ "X${ACTION}" = "X" ] ; then
 usage
 exit 1
fi

if [ "X${HOST}" = "X" -a "X${SUBACTION}" != "Xenable" -a "X${SUBACTION}" != "Xdisable" -a "X${SUBACTION}" != "Xlist" -a "X${SUBACTION}" != "Xpurge" -a "X${SUBACTION}" != "Xidle" -a "X${SUBACTION}" != "Xenabled" -a "X${SUBACTION}" != "Xdisabled" -a "X${SUBACTION}" != "Xenabledsummary" -a "X${SUBACTION}" != "Xdisabledsummary" -a "X${SUBACTION}" != "Xidlesummary" -a "X${SUBACTION}" != "Xsummary" ] ; then
 usage
 exit 1
fi



case "${ACTION}" in
 enable*)
  case "${SUBACTION}" in
   disabled|enabled)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
   ;;
   idle)
    runfilter "${HOST}" modifytimestamp
    RUNSTATUS="$?"
   ;;
   *)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"

  esac 

  if [ "X${RUNSTATUS}" != "X0" ] ; then
   echo "error in function:runfilter"
   echo "${HOSTOU}"
   exit "${RUNSTATUS}"
  fi
  modifyaction 1
 ;;
 disable*)
  case "${SUBACTION}" in
   disabled|enabled)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
   ;;
   idle)
    runfilter "${HOST}" modifytimestamp
    RUNSTATUS="$?"
   ;;
   *)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
  esac

  if [ "X${RUNSTATUS}" != "X0" ] ; then
   echo "error in function:runfilter"
   echo "${HOSTOU}"
   exit "${RUNSTATUS}"
  fi
  modifyaction 0
 ;;
 list*) 
  case "${SUBACTION}" in
   disabled*|enabled*)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
   ;;
   idle*)
    runfilter "${HOST}" modifytimestamp
    RUNSTATUS="$?"
   ;;
   summary)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"

    if [ "X${RUNSTATUS}" != "X0" ] ; then
      echo "error in function:runfilter"
      echo "${HOSTOU}"
      exit "${RUNSTATUS}"
    fi

    listaction enabledsummary
    listaction disabledsummary

    runfilter "${HOST}" modifytimestamp
    RUNSTATUS="$?"

    if [ "X${RUNSTATUS}" != "X0" ] ; then
      echo "error in function:runfilter"
      echo "${HOSTOU}"
      exit "${RUNSTATUS}"
    fi

    listaction idlesummary
   ;;
   *)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
  esac

  if [ "X${RUNSTATUS}" != "X0" ] ; then
   echo "error in function:runfilter"
   echo "${HOSTOU}"
   exit "${RUNSTATUS}"
  fi


  if [ "X${SUBACTION}" != "Xsummary" ] ; then
   listaction "${SUBACTION}"
  fi
 ;;

 purge*)
  case "${SUBACTION}" in
   disabled|enabled)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
   ;;
   idle)
    runfilter "${HOST}" modifytimestamp
    RUNSTATUS="$?"
   ;;
   *)
    runfilter "${HOST}" cmEnable
    RUNSTATUS="$?"
  esac

  if [ "X${RUNSTATUS}" != "X0" ] ; then
   echo "error in function:runfilter"
   echo "${HOSTOU}"
   exit "${RUNSTATUS}"
  fi

  modifyaction purge
esac
}

usage()
{
echo "usage: ${FETCHADMIN} --action [enable,disable,list,purge] [[enabled,enabledsummary,disabled,disabledsummary,idle,idlesummary,summary]] --host [hostfqdn,host*]"
}

runfilter()
{
FILTER="$1"
ATTRIB="$2"


case "${FILTER}" in
 ou=*)
  HOSTOU=`__ldapsearchhandler -LLL -b ou=hosts,${__LDAPDN} ${FILTER}  ${ATTRIB} 2>&1`
  HOSTOUSTATUS="$?"
 ;;
 *.FOO.FOO.*)
  HOSTOU=`__ldapsearchhandler -LLL -b ou=hosts,${__LDAPDN} ou=${FILTER} ${ATTRIB} 2>&1`
  HOSTOUSTATUS="$?"
 ;;
 "")
  HOSTOU=`__ldapsearchhandler -LLL -b ou=hosts,${__LDAPDN} ou=*.FOO.FOO.* ${ATTRIB} 2>&1`
  HOSTOUSTATUS="$?"
 ;;
 *)
  HOSTOU=`__ldapsearchhandler -LLL -b ou=hosts,${__LDAPDN} ou=${FILTER} ${ATTRIB} 2>&1`
  HOSTOUSTATUS="$?"
esac



CLEANHOSTOU=`echo "${HOSTOU}"|grep -v '^dn: .*ou=hosts,${__LDAPDN}$'`

return "${HOSTOUSTATUS}"
}

listaction()
{
TYPE="$1"

case "${TYPE}" in
 enabled*)
  ENABLEDHOSTS=`echo "${CLEANHOSTOU}"|perl -p -e 's/\n/ /g'|perl -p -e 's/dn: /\ndn: /g'|grep  'cmEnable: 1'`
  if [ "X${ENABLEDHOSTS}" = "X" ] ; then
   echo "enabled/active hosts QTY:0"
   echo
  else
   SUMMARYTEST=`echo "${TYPE}"|grep "summary$"`
   if [ "X${SUMMARYTEST}" != "X" ] ; then
    SUMMARYCOUNT=`echo "${ENABLEDHOSTS}"|grep '.'|wc -l|awk {'print $1'}`
    echo "enabled/active hosts QTY:${SUMMARYCOUNT}"
    echo
   else 
    echo "${ENABLEDHOSTS}"
   fi
  fi
 ;;
 disabled*)
  DISABLEDHOSTS=`echo "${CLEANHOSTOU}"|perl -p -e 's/\n/ /g'|perl -p -e 's/dn: /\ndn: /g'|grep -v 'cmEnable: 1'|grep '.'`
  if [ "X${DISABLEDHOSTS}" = "X" ] ; then
   echo "disabled/new hosts QTY:0"
   echo
  else
   SUMMARYTEST=`echo "${TYPE}"|grep "summary$"`
   if [ "X${SUMMARYTEST}" != "X" ] ; then
    SUMMARYCOUNT=`echo "${DISABLEDHOSTS}"|grep '.'|wc -l|awk {'print $1'}`
    echo "disabled/new hosts QTY:${SUMMARYCOUNT}"
    echo
    echo "${DISABLEDHOSTS}"
    echo
   else
    echo "${DISABLEDHOSTS}"
   fi
  fi
 ;;
 "")
  echo "${CLEANHOSTOU}" 
 ;;
 idle*)
  TWOWEEKSINSECS='1216800'
  FORMATTEDHOSTS=`echo "${CLEANHOSTOU}"|perl -p -e 's/\n/ /g'|perl -p -e 's/dn: /\ndn: /g'|perl -p -e "s/Z//g"|sed -e :a -e 's/\(.*[0-9]\)\([0-9]\{2\}\)/\1\|\2/;ta'|awk -F\| {'print $1$2" "$3" "$4" "$5" "$6" "$7" "$8'}|grep '^dn:'`
 IDLEHOSTS=`echo "${FORMATTEDHOSTS}"|/opt/sfw/bin/gawk -F":" ' {if(systime() - mktime($3) > 1216800) {print $1":"$2":"$3}}'|grep '.'`
   if [ "X${IDLEHOSTS}" = "X" ] ; then
   echo "idle/non-reporting hosts QTY:0"
   echo
  else
   SUMMARYTEST=`echo "${TYPE}"|grep "summary$"`
   if [ "X${SUMMARYTEST}" != "X" ] ; then
    SUMMARYCOUNT=`echo "${IDLEHOSTS}"|grep '.'|wc -l|awk {'print $1'}`
    echo "idle/non-reporting hosts QTY:${SUMMARYCOUNT}"
    echo
    echo "${IDLEHOSTS}"
    echo
   else
    echo "${IDLEHOSTS}"
   fi
  fi
 
 ;;
 *)
  usage
  exit 1
esac


}





modifyaction()
{
##ENABLELDIF=`echo "${CLEANHOSTOU}"|perl -p -e 's/^cmEnable: .*/changetype: modify\nreplace: cmEnable\ncmEnable: 1\n/g'`
FLAG="$1"

case "${FLAG}" in
 0|1)
  ENABLELDIF=`echo "${CLEANHOSTOU}"|grep '^dn: '|perl -p -e "s/ou\=hosts.*/ou\=hosts,${__LDAPDN}/g"|grep '.'|perl -p -e "s/\n/\nchangetype: modify\nreplace: cmEnable\ncmEnable: ${FLAG}\n\n/g"`

  svnlook cat /odirtools/svn/svnroot slack/roles/rolelist/files/var/cache/slack/roles.conf|grep "^#*${HOST}:" >/dev/null 2>&1
  AMINEW="$?"
  if [ "X${AMINEW}" = "X1" ] ; then
    DEFAULTROLES=`/odirtools/scripts/system.new "${HOST}"|grep "^${HOST}:"`
  else
    echo "...not new"
  fi

  if [ "X${DEFAULTROLES}" != "X" ] ; then
    echo "${DEFAULTROLES}" >> /odirtools/slack/roles/rolelist/files/var/cache/slack/roles.conf
    CWD=`pwd`
    cd /odirtools/slack/roles/rolelist/files/var/cache/slack/ && NHCOMMIT=`echo|svn commit -m "enabled new host ${HOST} in slack" 2>&1`
    . /odirtools/svn/svnroot/hooks/slack-commit.new rolelist justldif
    cd "${CWD}"
  fi

  echo "username: uid=${__SUDO_USER},ou=people,${__LDAPDN}"
  if [ "X${SLACKLDIF}" != "X" ] ; then
    echo "${ENABLELDIF}" >> "${SLACKLDIF}"
    ${__LDAPMODIFY} -H ldaps://FOO.FOO.${__DNSDOMAIN} -D "uid=${__SUDO_USER},ou=people,${__LDAPDN}" -W -x -f ${SLACKLDIF}
  else
    echo "${ENABLELDIF}"|${__LDAPMODIFY} -H ldaps://FOO.FOO.${__DNSDOMAIN} -D "uid=${__SUDO_USER},ou=people,${__LDAPDN}" -W -x
    echo "${ENABLELDIF}" > /odirtools/slack/backups/enable${__DATESTRING}.ldif
  fi
 ;;
 purge)
  PURGEFORMATTEDHOSTS=`echo "${CLEANHOSTOU}"|perl -p -e 's/\n/ /g'|perl -p -e 's/dn: /\ndn: /g'|perl -p -e "s/Z//g"|sed -e :a -e 's/\(.*[0-9]\)\([0-9]\{2\}\)/\1\|\2/;ta'|awk -F\| {'print $1$2" "$3" "$4" "$5" "$6" "$7" "$8'}|grep '^dn:'`
  PURGEHOSTS=`echo "${PURGEFORMATTEDHOSTS}"|/opt/sfw/bin/gawk -F":" ' {if(systime() - mktime($3) > 1216800) {print $1":"$2}}'|awk {'print $1" "$2'}|perl -p -e "s/ou\=hosts\,dc\=FOO.*/ou=\hosts\,${__LDAPDN}/g"`
  if echo "${PURGEHOSTS}"|grep "^dn: ou=.*.FOO.FOO.*,ou=hosts,${__LDAPDN}$" >/dev/null ; then
   PURGELDIF=`echo "${PURGEHOSTS}"|perl -p -e "s/\n/\nchangetype: delete\n\n/g"`
   IDTEST=`/usr/bin/id|grep '^uid=0(' >/dev/null`
   IDTESTSTATUS="$?"
   if [ "X${__SUDO_USER}" = "X" -a "X${IDTESTSTATUS}" = "X0" ] ; then
    echo "${PURGELDIF}"|${__LDAPMODIFY} -H ldaps://FOO.FOO.${__DNSDOMAIN} -D "cn=Directory Manager" -y %DIRMGRCRED% -x
   else
    echo "${PURGELDIF}"|${__LDAPMODIFY} -H ldaps://FOO.FOO.${__DNSDOMAIN} -D "uid=${__SUDO_USER},ou=people,${__LDAPDN}" -W -x
   fi
  fi
 ;;
 "")
  echo "FLAG: null"
  return 1
esac
}

main "${*}"
